class Solution {
    public int findSecondMinimumValue(TreeNode root) {
        // time complexity:  O(N), N: total number of treeNode
        // space: O(log(N))  stack space.
        // test case: [1,1,3,1,1,3,4,3,1,1,1,3,8,4,8,3,3,1,6,2,1]
        // root must be the minimum value;
        return helper(root,root.val);
    }
    
    private int helper(TreeNode root, int v) {
        if (root == null)  return -1;
        if (root.val > v) return root.val;
        else {
            int left = helper(root.left,v);
            int right = helper(root.right,v);
            if (left == -1) return right;
            else if (right == -1) return left;
            else return Math.min(left,right);
        }
    }
    
}
