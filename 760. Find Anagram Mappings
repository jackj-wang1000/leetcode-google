class Solution {
    public int[] anagramMappings(int[] A, int[] B) {
        // time complexity:  O(n_A + n_B)
        // space complexity: O(n_B), n_B is size of array B
        int L = A.length;
        int[] p = new int[L];
        // use HashMap to save index in array B.
        Map<Integer,Stack<Integer>> map = new HashMap<Integer,Stack<Integer>>();  
        for (int i = 0; i < L; i++) {
            if (!map.containsKey(B[i])) map.put(B[i],new Stack<Integer>());
            Stack<Integer> s = map.get(B[i]);
            s.push(i);
        }
        for (int i = 0; i < L; i++) {
            p[i] = map.get(A[i]).pop();
        }
        return p;
    }
}
