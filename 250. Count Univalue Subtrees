public class Solution {
    public int countUnivalSubtrees(TreeNode root) {
        // time complexity: O(N)
        // space complexity: O(logN)
        // algorithm: recursion
        int res = helper(root);
        return res>>1;
    }
    
    private int helper(TreeNode root) {
        if (root == null) return 0;
        int res = 0;
        boolean st = true;
        if (root.left != null) st = st && root.val == root.left.val;
        if (root.right != null) st = st && root.val == root.right.val;
        int cnt = helper(root.left);
        st = st && (cnt & 1) == 0;
        res += cnt >> 1;
        cnt = helper(root.right);
        st = st && (cnt & 1) == 0;
        res += cnt >> 1;
        return st  ?  (res + 1) << 1 : (res << 1) + 1;
    }
}
