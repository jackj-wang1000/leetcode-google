class Solution {
    public int intersectionSizeTwo(int[][] intervals) {
        // time complexity: O(NlogN)
        // space complexity: O(1)
        // algorithm: greedy algorithm + double pointer
        Arrays.sort(intervals, new Comparator<int[]>(){
            public int compare(int[] x, int[] y) {
                return x[1] == y[1] ? y[0] - x[0] : x[1] - y[1];
            }
        });
        int p1, p2;
        int n = intervals.length;
        p1 = intervals[0][1] - 1;
        p2 = intervals[0][1];
        int res = 2;
        for (int i = 1; i < n; i++) {
            if (intervals[i][0] > p2) {
                res += 2;
                p1 = intervals[i][1] - 1;
                p2 = intervals[i][1];
            }
            else if (intervals[i][0] > p1) {
                res++;
                p1 =p2;
                p2 = intervals[i][1];
            }
        }
        return res;
    }
}
