class Solution {
    public boolean checkInclusion(String s1, String s2) {
        // time complexity: O(N)
        // space complexity: O(1)
        // algorithm: double pointer
        int n1 = s1.length();
        int n2 = s2.length();
        if (n2 < n1) return false;
        int[] cnt = new int[26];
        for (int i = 0; i < n1; i++) {
            cnt[s1.charAt(i)-'a']++;
        }
        
        int pre = 0;
        for (int i = 0; i < n2; i++) {
            char c = s2.charAt(i);
            if (cnt[c-'a'] > 0) {
                cnt[c-'a']--;
                if (i - pre + 1 == n1) return true;
            }
            else {
                while (pre < i) {
                    if (s2.charAt(pre) == s2.charAt(i)) break;
                    cnt[s2.charAt(pre)-'a']++;
                    pre++;
                }
                pre++;
            }
        }
        return false;
    }
}
