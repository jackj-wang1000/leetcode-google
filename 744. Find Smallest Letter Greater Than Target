class Solution {
    public char nextGreatestLetter(char[] letters, char target) {
        // binary search
        // time complexity: O(N)
        // space : O(1)
        int n = letters.length;
        int low = 0;
        int high = n-1;
        int mid;
        if (target >= letters[n-1]) return letters[0];    // must add this.....
        while (low < high) {
            /*
            mid = low + (high-low)/2;
            if (letters[mid] > target) high = mid;
            else if (letters[mid] < target) low = mid + 1;
            else {
                return letters[(mid+1)%n];
            }
            */
            mid = low + (high - low)/2;
            if (letters[mid] > target) high = mid;
            else low = mid + 1;
        }
        return letters[high];
    }
}
