public class ValidWordAbbr {
    public Map<String,Set<String>> map;
    public ValidWordAbbr(String[] dictionary) {
        // time complexity: O(1)
        // space complexity: O(N)
        // algorithm: HashMap + HashSet
        int n = dictionary.length;
        map = new HashMap<String,Set<String>>();
        for (int i = 0; i < n; i++) {
            int L = dictionary[i].length() - 2;
            String key = L > 0 ? dictionary[i].charAt(0) + Integer.toString(L) + dictionary[i].charAt(L+1) : dictionary[i];
            if (!map.containsKey(key)) map.put(key,new HashSet<String>());
            map.get(key).add(dictionary[i]);
        }
        
    }
    
    public boolean isUnique(String word) {
        int L = word.length() - 2;
        String key = L > 0 ? word.charAt(0) + Integer.toString(L) + word.charAt(L+1) : word;
        if (map.containsKey(key) && (map.get(key).size() > 1 || !map.get(key).contains(word))) return false;
        else return true;
    }
    
}
