class Solution {
    public int subarraySum(int[] nums, int k) {
        // time complexity: O(N)
        // space: O(N) worst case
        int res = 0;
        int L = nums.length;
        int sum = 0;
        Map<Integer,Integer> map = new HashMap<Integer,Integer>();
        for (int i = 0; i < L; i++) {
            sum += nums[i];
            if(sum == k) res++;
            if(map.containsKey(sum-k)) res += map.get(sum-k);
            if(!map.containsKey(sum)) map.put(sum,0);
            map.put(sum,map.get(sum)+1);
        }
        
        return res;
    }
}
