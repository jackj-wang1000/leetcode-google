class Solution {
    public List<List<Integer>> largeGroupPositions(String S) {
        // time complexity:  O(N), N String length
        // space complexity: O(1)
        List<List<Integer>> res  = new ArrayList<List<Integer>>();
        int n = S.length();
        if (n < 1) return res;
        int start;
        start = 0;
        char c = S.charAt(0);
        for (int i = 0; i < n; i++) {
            if (S.charAt(i) != c) {
                if (i-start >= 3) { 
                    List<Integer> tmp = new ArrayList<Integer>(); 
                    tmp.add(start);
                    tmp.add(i-1);
                    res.add(tmp);
                }
                start = i;
                c = S.charAt(i);
            }
        }
        if (n - start >= 3) {
            List<Integer> tmp = new ArrayList<Integer>();
            tmp.add(start);
            tmp.add(n-1);
            res.add(tmp);
        }
        return res;
    }
}
