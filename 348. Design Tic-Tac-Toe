public class TicTacToe {

    /** Initialize your data structure here. */
    public TicTacToe(int n) {

    }
     
    /** Player {player} makes a move at ({row}, {col}).
        @param row The row of the board.
        @param col The column of the board.
        @param player The player, can be either 1 or 2.
        @return The current winning condition, can be either:
                0: No one wins.
                1: Player 1 wins.
                2: Player 2 wins. */
    public int move(int row, int col, int player) {
 
    }
    

}
/**
 * Your TicTacToe object will be instantiated and called as such:
 * TicTacToe obj = new TicTacToe(n);
 * int param_1 = obj.move(row,col,player);
 */


// **********************************************************************************************
public class TicTacToe {

    private int n;
    private int[] rowArr;
    private int[] colArr;
    private int diag,anti_diag;
    /** Initialize your data structure here. */
    public TicTacToe(int n) {
        this.n = n;
        rowArr = new int[n];
        colArr = new int[n];
        diag = 0;
        anti_diag = 0;
    }
     
    /** Player {player} makes a move at ({row}, {col}).
        @param row The row of the board.
        @param col The column of the board.
        @param player The player, can be either 1 or 2.
        @return The current winning condition, can be either:
                0: No one wins.
                1: Player 1 wins.
                2: Player 2 wins. */
    public int move(int row, int col, int player) {
        if (player == 1) {
            rowArr[row]++;
            colArr[col]++;
            if (row == col) diag++;
            if (row + col == n-1) anti_diag++;
            if (rowArr[row]== n || colArr[col] == n || diag == n || anti_diag == n) return 1;
        }
        else {
            rowArr[row]--;
            colArr[col]--;
            if(row == col) diag--;
            if(row + col == n-1) anti_diag--;
            if (rowArr[row]== -n || colArr[col] == -n || diag == -n || anti_diag == -n) return 2;
        }
        return 0;
    }
    

}
/**
 * Your TicTacToe object will be instantiated and called as such:
 * TicTacToe obj = new TicTacToe(n);
 * int param_1 = obj.move(row,col,player);
 */
