class Solution {
    public boolean judgeCircle(String moves) {
        // HashMap
        // time complexity: O(N)
        // space: O(1)
        Map<Character,Integer> map = new HashMap<Character,Integer>();
        map.put('L',0);
        map.put('R',0);
        map.put('U',0);
        map.put('D',0);
        int L = moves.length();
        for (int i = 0; i < L; i++) {
            char c = moves.charAt(i);
            map.put(c,map.get(c)+1);
        }
        //System.out.println("out: " + map.get('L') + " "+ map.get('R') + " "+ map.get('U') + " "+ map.get('D') + " ");
        //System.out.println("out: " + ((int)map.get('U') == (int)map.get('D')) + "  "+((int)map.get('L') == (int)map.get('R')));
        return (int) map.get('L') == (int) map.get('R') && (int) map.get('U') == (int)map.get('D');  // must cast into int
    }
}
