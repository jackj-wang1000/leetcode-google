class Solution {
    public int leastInterval(char[] tasks, int n) {
        // time complexity: O(N)
        // space complexity: O(1)
        // algorithm: mathematics
        int res = 0;
        int l = tasks.length;
        int[] task_cnt = new int[26];
        int max_cnt = 0;
        for (int i  = 0; i < l; i++) {
            task_cnt[tasks[i]-'A']++;
            max_cnt = Math.max(max_cnt,task_cnt[tasks[i]-'A']);
        }
        int exceed  = 0;
        for (int i = 0; i < 26; i++) {
            if (task_cnt[i] == max_cnt) exceed++;
        }
        return Math.max(l, (max_cnt-1)*(n+1)+exceed);
    }
}
