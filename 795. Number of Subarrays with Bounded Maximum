class Solution {
    public int numSubarrayBoundedMax(int[] A, int L, int R) {
        // time complexity: O(N)
        // space complexity: O(1)
        // algorithm:  double pointer
        int n = A.length;
        int pre_start = 0;
        int pre_end = 0;
        int res = 0;
        boolean st = false;
        for (int i = 0; i < n; i++) {
            if (A[i] > R) {
                st = false;
                pre_start = i + 1;
            }
            else if (A[i] >= L) {    // add # subarray ending at A[i]
                st = true;
                res += i-pre_start+1;
                pre_end = i;
            }
            else if (st){
                res += pre_end - pre_start+1;    // add # subarray ending at A[i]
            }
        }
        return res;
    }
}
